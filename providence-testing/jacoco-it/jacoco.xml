<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="Providence Utils : Testing"><sessioninfo id="oasis-d9578b30" start="1515885277111" dump="1515885291427"/><package name="net/morimekta/providence/testing/generator/extra"><class name="net/morimekta/providence/testing/generator/extra/ShortRangeGenerator"><method name="&lt;init&gt;" desc="(SS)V" line="16"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Short;" line="27"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/OneOfGenerator"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="19"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/DoubleRangeGenerator"><method name="&lt;init&gt;" desc="(DD)V" line="16"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Double;" line="27"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/IntRangeGenerator"><method name="&lt;init&gt;" desc="(II)V" line="16"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Integer;" line="27"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/ExtraGenerators"><method name="byteRange" desc="(II)Lnet/morimekta/providence/testing/generator/extra/ByteRangeGenerator;" line="15"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byteRange" desc="(BB)Lnet/morimekta/providence/testing/generator/extra/ByteRangeGenerator;" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortRange" desc="(II)Lnet/morimekta/providence/testing/generator/extra/ShortRangeGenerator;" line="29"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortRange" desc="(SS)Lnet/morimekta/providence/testing/generator/extra/ShortRangeGenerator;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intRange" desc="(II)Lnet/morimekta/providence/testing/generator/extra/IntRangeGenerator;" line="43"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longRange" desc="(JJ)Lnet/morimekta/providence/testing/generator/extra/LongRangeGenerator;" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleRange" desc="(DD)Lnet/morimekta/providence/testing/generator/extra/DoubleRangeGenerator;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oneOf" desc="([Ljava/lang/Object;)Lnet/morimekta/providence/testing/generator/extra/OneOfGenerator;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="oneOf" desc="(Ljava/util/Collection;)Lnet/morimekta/providence/testing/generator/extra/OneOfGenerator;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enumValue" desc="([Lnet/morimekta/providence/PEnumValue;)Lnet/morimekta/providence/testing/generator/extra/EnumValueGenerator;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enumValue" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;)Lnet/morimekta/providence/testing/generator/extra/EnumValueGenerator;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enumName" desc="([Lnet/morimekta/providence/PEnumValue;)Lnet/morimekta/providence/testing/generator/extra/EnumNameGenerator;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enumName" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;)Lnet/morimekta/providence/testing/generator/extra/EnumNameGenerator;" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/EnumNameGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;)V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Lnet/morimekta/providence/PEnumValue;)V" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/LongRangeGenerator"><method name="&lt;init&gt;" desc="(JJ)V" line="16"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Long;" line="27"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/EnumValueGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;)V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Lnet/morimekta/providence/PEnumValue;)V" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Integer;" line="28"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/extra/ByteRangeGenerator"><method name="&lt;init&gt;" desc="(BB)V" line="16"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Byte;" line="27"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OneOfGenerator.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="2" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LongRangeGenerator.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="2" cb="0"/><line nr="21" mi="18" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EnumValueGenerator.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="2" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EnumNameGenerator.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="2" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DoubleRangeGenerator.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="2" cb="0"/><line nr="21" mi="18" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ShortRangeGenerator.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="2" cb="0"/><line nr="21" mi="18" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ByteRangeGenerator.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="2" cb="0"/><line nr="21" mi="18" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntRangeGenerator.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="2" cb="0"/><line nr="21" mi="18" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExtraGenerators.java"><line nr="15" mi="6" ci="0" mb="4" cb="0"/><line nr="16" mi="12" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="4" cb="0"/><line nr="19" mi="12" ci="0" mb="0" cb="0"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="4" cb="0"/><line nr="30" mi="12" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="4" cb="0"/><line nr="33" mi="12" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="466" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="83" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="33" covered="0"/><counter type="CLASS" missed="9" covered="0"/></package><package name="net/morimekta/providence/testing"><class name="net/morimekta/providence/testing/HasFieldValue"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PField;)V" line="49"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;)Z" line="55"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeTo" desc="(Lorg/hamcrest/Description;)V" line="78"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeMismatch" desc="(Ljava/lang/Object;Lorg/hamcrest/Description;)V" line="83"><counter type="INSTRUCTION" missed="108" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/EqualToMessage"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/PMessage;)V" line="52"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeTo" desc="(Lorg/hamcrest/Description;)V" line="69"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeMismatch" desc="(Ljava/lang/Object;Lorg/hamcrest/Description;)V" line="76"><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectMismatches" desc="(Ljava/lang/String;Lnet/morimekta/providence/PMessage;Lnet/morimekta/providence/PMessage;Ljava/util/ArrayList;)V" line="113"><counter type="INSTRUCTION" missed="224" covered="0"/><counter type="BRANCH" missed="21" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectMapMismatches" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/ArrayList;)V" line="181"><counter type="INSTRUCTION" missed="145" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectSetMismatches" desc="(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;Ljava/util/ArrayList;)V" line="229"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectListMismatches" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/ArrayList;)V" line="247"><counter type="INSTRUCTION" missed="225" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="310"><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="limitToString" desc="(Lnet/morimekta/providence/PMessage;)Ljava/lang/String;" line="353"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$6" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;" line="321"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectSetMismatches$5" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="238"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectSetMismatches$4" desc="(Ljava/util/Set;Ljava/lang/Object;)Z" line="237"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectSetMismatches$3" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="231"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectSetMismatches$2" desc="(Ljava/util/Set;Ljava/lang/Object;)Z" line="230"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectMapMismatches$1" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;" line="185"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$collectMapMismatches$0" desc="(Ljava/util/Map;Ljava/lang/Object;)Z" line="183"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1056" covered="0"/><counter type="BRANCH" missed="105" covered="0"/><counter type="LINE" missed="191" covered="0"/><counter type="COMPLEXITY" missed="71" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/HasFieldValueThat"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/hamcrest/Matcher;)V" line="45"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PField;Lorg/hamcrest/Matcher;)V" line="52"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matches" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeTo" desc="(Lorg/hamcrest/Description;)V" line="82"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeMismatch" desc="(Ljava/lang/Object;Lorg/hamcrest/Description;)V" line="88"><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/EqualToMessage$1"><method name="&lt;clinit&gt;" desc="()V" line="145"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/ProvidenceMatchers"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalToMessage" desc="(Lnet/morimekta/providence/PMessage;)Lnet/morimekta/providence/testing/EqualToMessage;" line="34"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasFieldValue" desc="(Ljava/lang/String;)Lnet/morimekta/providence/testing/HasFieldValue;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasFieldValue" desc="(Lnet/morimekta/providence/descriptor/PField;)Lnet/morimekta/providence/testing/HasFieldValue;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasFieldValueThat" desc="(Ljava/lang/String;Lorg/hamcrest/Matcher;)Lnet/morimekta/providence/testing/HasFieldValueThat;" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasFieldValueThat" desc="(Lnet/morimekta/providence/descriptor/PField;Lorg/hamcrest/Matcher;)Lnet/morimekta/providence/testing/HasFieldValueThat;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="HasFieldValueThat.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="2" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="17" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="13" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="112" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="2" cb="0"/><line nr="116" mi="13" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="13" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="234" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HasFieldValue.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="2" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="2" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="17" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="13" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="2" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ProvidenceMatchers.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EqualToMessage.java"><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="6" ci="0" mb="2" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="16" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="13" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="2" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="2" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="10" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="13" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="14" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="16" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="18" ci="0" mb="2" cb="0"/><line nr="134" mi="7" ci="0" mb="2" cb="0"/><line nr="135" mi="4" ci="0" mb="2" cb="0"/><line nr="136" mi="16" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="140" mi="16" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="145" mi="39" ci="0" mb="5" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="11" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="11" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="11" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="15" ci="0" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="8" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="2" cb="0"/><line nr="185" mi="9" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="11" ci="0" mb="2" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="2" cb="0"/><line nr="194" mi="11" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="8" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="2" cb="0"/><line nr="203" mi="14" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="4" cb="0"/><line nr="205" mi="15" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="2" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="212" mi="14" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="7" ci="0" mb="0" cb="0"/><line nr="230" mi="11" ci="0" mb="2" cb="0"/><line nr="231" mi="9" ci="0" mb="0" cb="0"/><line nr="232" mi="6" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="11" ci="0" mb="2" cb="0"/><line nr="238" mi="15" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="8" ci="0" mb="2" cb="0"/><line nr="252" mi="14" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="10" ci="0" mb="2" cb="0"/><line nr="257" mi="4" ci="0" mb="2" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="2" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="2" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="2" ci="0" mb="2" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="2" cb="0"/><line nr="274" mi="8" ci="0" mb="0" cb="0"/><line nr="276" mi="15" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="17" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="2" cb="0"/><line nr="286" mi="14" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="8" ci="0" mb="2" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="2" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="2" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="14" ci="0" mb="0" cb="0"/><line nr="301" mi="16" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="2" cb="0"/><line nr="304" mi="17" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="2" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="2" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="2" cb="0"/><line nr="315" mi="7" ci="0" mb="0" cb="0"/><line nr="316" mi="9" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="2" cb="0"/><line nr="318" mi="14" ci="0" mb="0" cb="0"/><line nr="319" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="16" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="2" cb="0"/><line nr="324" mi="14" ci="0" mb="0" cb="0"/><line nr="325" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="2" cb="0"/><line nr="329" mi="13" ci="0" mb="0" cb="0"/><line nr="330" mi="3" ci="0" mb="2" cb="0"/><line nr="331" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="3" ci="0" mb="2" cb="0"/><line nr="333" mi="9" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="338" mi="13" ci="0" mb="0" cb="0"/><line nr="340" mi="3" ci="0" mb="2" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="6" ci="0" mb="2" cb="0"/><line nr="343" mi="3" ci="0" mb="0" cb="0"/><line nr="345" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="7" ci="0" mb="2" cb="0"/><line nr="354" mi="4" ci="0" mb="2" cb="0"/><line nr="355" mi="12" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1089" covered="0"/><counter type="BRANCH" missed="105" covered="0"/><counter type="LINE" missed="191" covered="0"/><counter type="COMPLEXITY" missed="72" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1555" covered="0"/><counter type="BRANCH" missed="153" covered="0"/><counter type="LINE" missed="292" covered="0"/><counter type="COMPLEXITY" missed="112" covered="0"/><counter type="METHOD" missed="34" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><package name="net/morimekta/providence/testing/generator/defaults"><class name="net/morimekta/providence/testing/generator/defaults/LongGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Long;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/ShortGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Short;" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/MapGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PMap;)V" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/defaults/BinaryGenerator"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Lnet/morimekta/util/Binary;" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/ListGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PList;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/DoubleGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Double;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/EnumGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Lnet/morimekta/providence/PEnumValue;" line="23"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/IntGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Integer;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/ByteGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Byte;" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/StringGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/BoolGenerator"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Boolean;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/defaults/SetGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PSet;)V" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/util/Set;" line="23"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ByteGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListGenerator.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="2"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapGenerator.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="7" ci="0" mb="2" cb="0"/><line nr="30" mi="9" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryGenerator.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShortGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SetGenerator.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="2" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BoolGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringGenerator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumGenerator.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="1" cb="1"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="89" covered="134"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="24" covered="34"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="4" covered="20"/><counter type="CLASS" missed="2" covered="10"/></package><package name="net/morimekta/providence/testing/generator"><class name="net/morimekta/providence/testing/generator/GeneratorContext"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/GeneratorBase;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFairy" desc="()Lio/codearte/jfairy/Fairy;" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRandom" desc="()Ljava/util/Random;" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultMaxCollectionSize" desc="()I" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultFillRate" desc="()D" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generatorFor" desc="(Lnet/morimekta/providence/descriptor/PDeclaredDescriptor;)Lnet/morimekta/providence/testing/generator/Generator;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generatorFor" desc="(Lnet/morimekta/providence/descriptor/PDescriptor;)Lnet/morimekta/providence/testing/generator/Generator;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDefaultCollectionSize" desc="()I" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/SimpleGeneratorContext"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/GeneratorBase;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/GeneratorWatcher$1"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/GeneratorWatcher;Lnet/morimekta/providence/descriptor/PMessageDescriptor;)V" line="193"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Lnet/morimekta/providence/PMessage;" line="196"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="net/morimekta/providence/testing/generator/GeneratorWatcher"><method name="create" desc="()Lnet/morimekta/providence/testing/generator/SimpleGeneratorWatcher;" line="76"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lnet/morimekta/providence/testing/generator/GeneratorBase;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/GeneratorBase;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;)Lnet/morimekta/providence/PMessage;" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;Lnet/morimekta/providence/descriptor/PMessageDescriptor;)Lnet/morimekta/providence/PMessage;" line="138"><counter type="INSTRUCTION" missed="14" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withGenerator" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;Ljava/util/function/Consumer;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="164"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultGenerator" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newReportingGenerator" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="193"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allGenerated" desc="()Ljava/util/List;" line="211"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpGeneratedMessages" desc="()V" line="221"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseContext" desc="()Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="238"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRandom" desc="(Ljava/util/Random;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="252"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFairy" desc="(Lio/codearte/jfairy/Fairy;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="263"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocale" desc="(Ljava/util/Locale;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="285"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFillRate" desc="(D)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="300"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMessageWriter" desc="(Lnet/morimekta/providence/mio/MessageWriter;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="312"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMessageReader" desc="(Lnet/morimekta/providence/mio/MessageReader;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="328"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResourceReader" desc="(Ljava/lang/String;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="345"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResourceReader" desc="(Ljava/lang/String;Lnet/morimekta/providence/serializer/Serializer;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="357"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutputSerializer" desc="(Lnet/morimekta/providence/serializer/Serializer;)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="371"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMaxCollectionItems" desc="(I)Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="389"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpOnFailure" desc="()Lnet/morimekta/providence/testing/generator/GeneratorWatcher;" line="403"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="starting" desc="(Lorg/junit/runner/Description;)V" line="415"><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failed" desc="(Ljava/lang/Throwable;Lorg/junit/runner/Description;)V" line="433"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finished" desc="(Lorg/junit/runner/Description;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="269" covered="152"/><counter type="BRANCH" missed="37" covered="5"/><counter type="LINE" missed="67" covered="37"/><counter type="COMPLEXITY" missed="39" covered="8"/><counter type="METHOD" missed="18" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/GeneratorBase"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/codearte/jfairy/Fairy;Ljava/util/Random;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/codearte/jfairy/Fairy;Ljava/util/Random;DI)V" line="88"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;DILio/codearte/jfairy/Fairy;Ljava/util/Random;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/GeneratorBase;)V" line="121"><counter type="INSTRUCTION" missed="28" covered="33"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generatorFor" desc="(Lnet/morimekta/providence/descriptor/PDescriptor;)Lnet/morimekta/providence/testing/generator/Generator;" line="142"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enumGeneratorFor" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;)Lnet/morimekta/providence/testing/generator/Generator;" line="161"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messageGeneratorFor" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="182"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withEnumGenerator" desc="(Lnet/morimekta/providence/descriptor/PEnumDescriptor;Lnet/morimekta/providence/testing/generator/Generator;)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="202"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMessageGenerator" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;Lnet/morimekta/providence/testing/generator/MessageGenerator;)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="219"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMessageGenerator" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;Ljava/util/function/Consumer;)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="237"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFairy" desc="()Lio/codearte/jfairy/Fairy;" line="252"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFairy" desc="(Lio/codearte/jfairy/Fairy;)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="261"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRandom" desc="()Ljava/util/Random;" line="270"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRandom" desc="(Ljava/util/Random;)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="279"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultMaxCollectionSize" desc="()I" line="287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultMaxCollectionSize" desc="(I)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="296"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultFillRate" desc="()D" line="304"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultFillRate" desc="(D)Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="313"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deepCopy" desc="()Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="326"><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="self" desc="()Lnet/morimekta/providence/testing/generator/GeneratorBase;" line="336"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeGeneratorInternal" desc="(Lnet/morimekta/providence/descriptor/PDescriptor;)Lnet/morimekta/providence/testing/generator/Generator;" line="343"><counter type="INSTRUCTION" missed="37" covered="44"/><counter type="BRANCH" missed="6" covered="9"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$makeGeneratorInternal$0" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Object;" line="345"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="127" covered="255"/><counter type="BRANCH" missed="8" covered="23"/><counter type="LINE" missed="27" covered="55"/><counter type="COMPLEXITY" missed="17" covered="29"/><counter type="METHOD" missed="9" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/SimpleGeneratorWatcher"><method name="create" desc="()Lnet/morimekta/providence/testing/generator/SimpleGeneratorWatcher;" line="9"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/SimpleGeneratorBase;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/GeneratorBase$1"><method name="&lt;clinit&gt;" desc="()V" line="343"><counter type="INSTRUCTION" missed="14" covered="89"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="89"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/SimpleGeneratorBase"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/testing/generator/SimpleGeneratorBase;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createContext" desc="()Lnet/morimekta/providence/testing/generator/SimpleGeneratorContext;" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="net/morimekta/providence/testing/generator/MessageGenerator"><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnet/morimekta/providence/descriptor/PMessageDescriptor;Ljava/util/Map;Ljava/util/Map;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAlwaysPresent" desc="([Lnet/morimekta/providence/descriptor/PField;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAlwaysPresent" desc="(Ljava/util/Collection;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="64"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAlwaysAbsent" desc="([Lnet/morimekta/providence/descriptor/PField;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAlwaysAbsent" desc="(Ljava/util/Collection;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="92"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultPresence" desc="([Lnet/morimekta/providence/descriptor/PField;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDefaultPresence" desc="(Ljava/util/Collection;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="118"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetDefaultPresence" desc="()Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueGenerator" desc="(Lnet/morimekta/providence/descriptor/PField;Lnet/morimekta/providence/testing/generator/Generator;)Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="137"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Lnet/morimekta/providence/testing/generator/GeneratorContext;)Lnet/morimekta/providence/PMessage;" line="143"><counter type="INSTRUCTION" missed="126" covered="53"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="23" covered="7"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deepCopy" desc="()Lnet/morimekta/providence/testing/generator/MessageGenerator;" line="198"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeFieldValue" desc="(Lnet/morimekta/providence/descriptor/PField;Lnet/morimekta/providence/testing/generator/GeneratorContext;)Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="226" covered="92"/><counter type="BRANCH" missed="24" covered="8"/><counter type="LINE" missed="43" covered="18"/><counter type="COMPLEXITY" missed="23" covered="6"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GeneratorBase.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="16" mb="0" cb="0"/><line nr="129" mi="4" ci="8" mb="1" cb="1"/><line nr="130" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="8" mb="1" cb="1"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="6" mb="0" cb="2"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="11" mb="0" cb="0"/><line nr="327" mi="0" ci="10" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="343" mi="14" ci="95" mb="6" cb="9"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="6" ci="0" mb="0" cb="0"/><line nr="367" mi="6" ci="0" mb="0" cb="0"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="344"/><counter type="BRANCH" missed="8" covered="23"/><counter type="LINE" missed="27" covered="55"/><counter type="COMPLEXITY" missed="17" covered="30"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="GeneratorContext.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneratorWatcher.java"><line nr="64" mi="2" ci="5" mb="1" cb="1"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="13" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="2" cb="0"/><line nr="223" mi="7" ci="0" mb="0" cb="0"/><line nr="226" mi="11" ci="0" mb="2" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="2" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="2" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="22" ci="0" mb="6" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="2" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="2" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="10" ci="0" mb="4" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="7" ci="0" mb="0" cb="0"/><line nr="357" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="2" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="10" ci="0" mb="4" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="3" ci="0" mb="2" cb="0"/><line nr="390" mi="6" ci="0" mb="0" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="394" mi="2" ci="0" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="1" cb="1"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="6" mb="2" cb="2"/><line nr="417" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="1" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="2" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="2" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="439" mi="1" ci="0" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="288" covered="152"/><counter type="BRANCH" missed="37" covered="5"/><counter type="LINE" missed="70" covered="37"/><counter type="COMPLEXITY" missed="41" covered="8"/><counter type="METHOD" missed="20" covered="8"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="SimpleGeneratorBase.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MessageGenerator.java"><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="2" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="10" ci="0" mb="2" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="10" ci="0" mb="2" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="1" cb="1"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="12" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="2" cb="0"/><line nr="149" mi="2" ci="0" mb="2" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="2" cb="0"/><line nr="162" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="15" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="8" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="18" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="1" cb="1"/><line nr="176" mi="7" ci="0" mb="2" cb="0"/><line nr="177" mi="9" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="9" mb="1" cb="3"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="2" cb="0"/><line nr="186" mi="9" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="16" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="1" cb="1"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="226" covered="92"/><counter type="BRANCH" missed="24" covered="8"/><counter type="LINE" missed="43" covered="18"/><counter type="COMPLEXITY" missed="23" covered="6"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleGeneratorContext.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleGeneratorWatcher.java"><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="660" covered="648"/><counter type="BRANCH" missed="69" covered="36"/><counter type="LINE" missed="141" covered="128"/><counter type="COMPLEXITY" missed="82" covered="57"/><counter type="METHOD" missed="39" covered="41"/><counter type="CLASS" missed="1" covered="8"/></package><counter type="INSTRUCTION" missed="2770" covered="782"/><counter type="BRANCH" missed="259" covered="39"/><counter type="LINE" missed="540" covered="162"/><counter type="COMPLEXITY" missed="250" covered="78"/><counter type="METHOD" missed="110" covered="61"/><counter type="CLASS" missed="17" covered="18"/></report>